server {
    listen 80;
    server_tokens off;

    server_name larart.ru www.larart.ru;

    # location /foodgram/docs/ {
    #     root /usr/share/nginx/html;
    #     try_files $uri $uri/redoc.html;
    # }
    
    
    location /foodgram/docs/ {
        root /usr/share/nginx/html/;
        try_files $uri $uri/redoc.html;
        # try_files $uri /redoc.html;
    }
    
    
    location /backend_static/ {
        autoindex on;
        alias /code/backend_static/;
    }

    location /backend_media/ {
        autoindex on;
        alias /code/backend_media/;
    }

    location /api {
      try_files $uri @proxy_api;
      proxy_set_header        Host $host;
    }
    location /admin {
      try_files $uri @proxy_api;
    }

    location / {
        root /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri /index.html;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
    }
    

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   /var/html/frontend/;
    }
    location @proxy_api {
      proxy_pass http://backend:8000;
    }

}

# server {
#     listen 80;
#     server_tokens off;
#     server_name _;
#     location /foodgram/docs/ {
#         root /usr/share/nginx/html;
#         try_files $uri $uri/redoc.html;
#     }
#     location ~* ^/(api|admin)(/|$) {
#         proxy_set_header        Host $host;
#         proxy_set_header        X-Forwarded-Host $host;
#         proxy_set_header        X-Forwarded-Server $host;
#         proxy_redirect off;
#         proxy_pass http://backend:8000;
#     }
#     location / {
#         root /usr/share/nginx/html;
#         index  index.html index.htm;
#         try_files $uri /index.html;
#         proxy_set_header        Host $host;
#         proxy_set_header        X-Real-IP $remote_addr;
#         proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header        X-Forwarded-Proto $scheme;
#      }
#      location /backend_static/ {
#          autoindex on;
#          alias /code/backend_static/;
#      }
#      location /backend_media/ {
#          autoindex on;
#          alias /code/backend_media/;
#      }
#      error_page   500 502 503 504  /50x.html;
    #  location = /50x.html {
    #    root/var/html/frontend/;
    #   }


# }

# Compose:
# version: '3.8'

# services:
#   postgres:
#     image: postgres:13.3
#     restart: always
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     env_file:
#       - ./.envs/.postgres

#   frontend:
#     image: raikhert/foodgramfront:latest
#     volumes:
#       - frontend_data:/app/result_build/
#     depends_on:
#       - postgres
#   backend:
#     image: raikhert/foodgramback:latest
#     restart: always
#     volumes:
#       - static_value:/code/backend_static/
#       - media_value:/code/backend_media/
#     env_file:
#       - ./.envs/.postgres
#       - ./.envs/.django
#   migrations:
#     image: raikhert/foodgramback:latest
#     volumes:
#       - static_value:/code/backend_static/
#       - media_value:/code/backend_media/
#     command: >
#       sh -c "python manage.py migrate &&
#              python manage.py collectstatic --noinput &&
#              python manage.py createadmin &&
#              python manage.py filldb"
#     depends_on:
#       - backend
#     env_file:
#       - ./.envs/.postgres
#       - ./.envs/.django
#   nginx:
#     image: nginx:1.19.3
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx.conf:/etc/nginx/conf.d/default.conf
#       - frontend_data:/usr/share/nginx/html/
#       - ../docs/redoc.html:/usr/share/nginx/html/foodgram/docs/redoc.html
#       - ../docs/openapi-schema.yml:/usr/share/nginx/html/foodgram/docs/openapi-schema.yml
#       - static_value:/code/backend_static/
#       - media_value:/code/backend_media
#     depends_on:
#       - backend
#       - frontend

# volumes:
#   postgres_data:
#   frontend_data:
#   static_value:
#   media_value: